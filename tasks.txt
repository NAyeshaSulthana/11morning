STRINGS:--
1) Write a Python program to count the number of characters (character frequency) in a string. 
Sample String : google.com'
Expected Result : {'o': 3, 'g': 2, '.': 1, 'e': 1, 'l': 1, 'm': 1, 'c': 1}
2) Write a Python program to get a string from a given string where all occurrences of its first char have been changed to '$', except the first char itself.
Sample String : 'restart'
Expected Result : 'resta$t'
3)Write a Python program to get a single string from two given strings, separated by a space and swap the first two characters of each string.
Sample String : 'abc', 'xyz' 
Expected Result : 'xyc abz'
4) Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing' then add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged. 
Sample String : 'abc'
Expected Result : 'abcing' 
Sample String : 'string'
Expected Result : 'stringly'
5) Write a Python program to find the first appearance of the substring 'not' and 'poor' from a given string, if 'not' follows the 'poor', replace the whole 'not'...'poor' substring with 'good'. Return the resulting string. 
Sample String : 'The lyrics is not that poor!'
'The lyrics is poor!'
Expected Result : 'The lyrics is good!'
'The lyrics is poor!'
6)Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing' then add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged. 
Sample String : 'abc'
Expected Result : 'abcing' 
Sample String : 'string'
Expected Result : 'stringly'
7). Write a Python function that takes a list of words and returns the length of the longest one.
8) Write a Python program to change a given string to a new string where the first and last chars have been exchanged.
9) Write a Python program to remove the nth index character from a nonempty string.
10)Write a Python function to create the HTML string with tags around the word(s).
Sample function and result : 
add_tags('i', 'Python') -> '<i>Python</i>'
add_tags('b', 'Python Tutorial') -> '<b>Python Tutorial </b>'
LISTS:--
1)Write a Python program to multiplies all the items in a list. 
2)Write a Python program to get the largest number from a list.
3) Write a Python program to get a list, sorted in increasing order by the last element in each tuple from a given list of non-empty tuples. 
Sample List : [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]
Expected Result : [(2, 1), (1, 2), (2, 3), (4, 4), (2, 5)]
4)Write a Python program to check a list is empty or not.
5)Write a Python program to find the list of words that are longer than n from a given list of words.
6) Write a Python program to generate a 3*4*6 3D array whose each element is *. 
7) Write a Python program to generate and print a list of first and last 5 elements where the values are square of numbers between 1 and 30 (both included).
8)Write a Python program to generate all permutations of a list in Python.
9)Write a Python program to count the number of elements in a list within a specified range
10) Write a Python program to create a list by concatenating a given list which range goes from 1 to n. 
Sample list : ['p', 'q']
n =5
Sample Output : ['p1', 'q1', 'p2', 'q2', 'p3', 'q3', 'p4', 'q4', 'p5', 'q5']
tuple:--
1)Write a Python program to count the elements in a list until an element is a tuple.
2) Write a Python program to reverse a tuple.
3)Write a Python program to unzip a list of tuples into individual lists.
4)Write a Python program to create a tuple with numbers and print one item
5)Write a Python program to get the   4th element from first and last  of a tuple.
6)Remove empty tuples from a list
7) Write a Python program to check whether an element exists within a tuple.
8)Sort a tuple by its float element
9)Python Set symmetric_difference()
10)to remove duplicates from the tuple.
sets:--
1) Write a Python program to clear a set. 
2) Write a Python program to use of frozensets.
3) Write a Python program to find maximum and the minimum value in a set
4)Write a Python program to add member(s) and remove item(s) from set
5)Write a Python program to create an intersection ,union and set difference
6) Write a Python program to issubset and issuperset
7)Program to accept the strings which contains all vowels
8)Python program to find common elements in three lists using sets
9)Find missing and additional values in two lists
10)Pairs of complete strings in two sets




dictionaries:--
1)Write a Python script to check if a given key already exists in a dictionary. 
2) Write a Python script to generate and print a dictionary that contains a number (between 1 and n) in the form (x, x*x). 
Sample Dictionary ( n = 5) : 
Expected Output : {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}
3)Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5,
between 2000 and 3200 (both included).
The numbers obtained should be printed in a comma-separated sequence on a single line.
4)Write a Python program to sum and multiply all the items in a dictionary.
5)Write a Python program to get the maximum and minimum value in a dictionary.
6)Write a Python program to print all unique values in a dictionary. 
Sample Data : [{"V":"S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII":"S005"}, {"V":"S009"},{"VIII":"S007"}]
Expected Output : Unique Values: {'S005', 'S002', 'S007', 'S001', 'S009'}
7). Write a Python program to create and display all combinations of letters, selecting each letter from a different key in a dictionary.
Sample data : {'1':['a','b'], '2':['c','d']}
Expected Output: 
ac
ad
bc
bd
8)Write a Python program to create a dictionary from a string. 
Note: Track the count of the letters from the string.
Sample string : 'w3resource'
Expected output: {'3': 1, 's': 1, 'r': 2, 'u': 1, 'w': 1, 'c': 1, 'e': 2, 'o': 1}
9) Write a Python program to get the key, value and item in a dictionary.
10) Write a Python program to sort Counter by value.
Sample data : {'Math':81, 'Physics':83, 'Chemistry':87}
Expected data: [('Chemistry', 87), ('Physics', 83), ('Math', 81)]
Collapse



